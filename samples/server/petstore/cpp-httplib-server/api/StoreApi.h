/*
 * Generated by OpenAPI Generator, do not edit.
 * https://openapi-generator.tech
 */

#pragma once
#include <httplib.h>
#include <variant>
#include "models/Order.h"

namespace api {

class Store {
public:
    Store() = default;
    virtual ~Store() = default;
    void registerRoutes(httplib::Server& svr);

    /**
     * @brief handleDeleteForStoreOrder{orderId} is a Pure virtual handler function for API endpoint.
     *
     * This function must be implemented by derived classes to handle the corresponding API request.
     */
    virtual void handleDeleteForStoreOrder{orderId}()=0;


    /**
     * @brief Response type for handleGetForStoreInventory.
     */
    using StoreInventoryResponse = std::variant<
                        int>;//success type

    /**
     * @brief Handler function for processing API requests.
     *
     * handleGetForStoreInventory is a pure virtual function that must be implemented by derived classes to handle.
     * @return StoreInventoryResponse The response type returned by the handler.
     */
    virtual StoreInventoryResponse handleGetForStoreInventory()=0;


    /**
     * @brief Response type for handleGetForStoreOrder{orderId}.
     */
    using StoreOrder{orderId}Response = std::variant<
                        models::Order>;//success type

    /**
     * @brief Handler function for processing API requests.
     *
     * handleGetForStoreOrder{orderId} is a pure virtual function that must be implemented by derived classes to handle.
     * @return StoreOrder{orderId}Response The response type returned by the handler.
     */
    virtual StoreOrder{orderId}Response handleGetForStoreOrder{orderId}()=0;


    /**
     * @brief Response type for handlePostForStoreOrder.
     */
    using StoreOrderResponse = std::variant<
                        models::Order>;//success type

    /**
     * @brief Handler function for processing API requests.
     *
     * handlePostForStoreOrder is a pure virtual function that must be implemented by derived classes to handle.
     * @param request model containing the input data for the API endpoint.
     * @return StoreOrderResponse The response type returned by the handler.
     */
    virtual StoreOrderResponse handlePostForStoreOrder(
                         const models::Order& request) = 0;

};

} // namespace api
